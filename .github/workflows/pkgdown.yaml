on:
  push:
    branches:
      - main
      - master

name: pkgdown

jobs:
  pkgdown:
    name: pkgdown
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          install.packages(c('remotes'))
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        run: |
          # install spatial dependencies
          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
          sudo apt update
          sudo apt install \
            libudunits2-dev \
            libgdal-dev \
            libgeos-dev \
            libproj-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libcurl4-openssl-dev

      - name: Install dependencies
        run: |
          options(repos = c(rspatial = 'https://rspatial.r-universe.dev',
                            rspatial2 = 'https://r-spatial.r-universe.dev',
                            CRAN = 'https://cloud.r-project.org'))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("motif")
          remotes::install_cran("rcmdcheck")
          remotes::install_cran("covr")
          remotes::install_github("r-lib/pkgdown")
        shell: Rscript {0}

      - name: Check
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      - name: Deploy package
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'

      - name: Test coverage
        run: covr::codecov(line_exclusions = list("src/dtw/include/DTW.hpp"))
        shell: Rscript {0}
